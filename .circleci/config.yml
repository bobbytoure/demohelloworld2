version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point

    working_directory: ~/circleci-demo-java-spring # directory where steps will run

    docker: # run the steps with Docker
      - image: circleci/openjdk:8-jdk-browsers # ...with this image as the primary container; this is where all `steps` will run
      #- image: circleci/jdk:8
      #- image: buildpack-deps:trusty
      #- image: circleci/jdk8:0.1.1
    steps: # a collection of executable commands

      - checkout # check out source code to working directory

      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: circleci-demo-java-spring-{{ checksum "pom.xml" }}

      #- run: apt-get install maven
      #- run : mvn clean install -U
      - run: java -version #test bobby
      #- run: ls -lRt ~/.m2/
      #- run: ls -lRt ~/circleci-demo-java-spring/
      - run: ls -lrt /home/circleci/circleci-demo-java-spring/
      - run: mvn -version
      - run: mvn dependency:go-offline # gets the project dependencies

      - save_cache: # saves the project dependencies
          paths:
            - ~/.m2
          key: circleci-demo-java-spring-{{ checksum "pom.xml" }}

      - run: mvn package # run the actual tests
      #- run: sudo apt update
      #- run: sudo apt-get install -y docker
      #- run: sudo apt search docker
      #- run: sudo service --status-all
      #- run: sudo service docker status
      #- run: sudo ls -l /etc/init.d/
      #- run: sudo docker ps
      #- run: sudo systemctl status docker
      - setup_remote_docker
      - run: mvn clean compile com.google.cloud.tools:jib-maven-plugin:0.9.7:dockerBuild

      - store_test_results: # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard.
          # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: target/surefire-reports

      - store_artifacts: # store the uberjar as an artifact
          # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: target/demo-java-spring-0.0.1-SNAPSHOT.jar
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
      - run: ls -lrt /home/circleci/circleci-demo-java-spring/
      - run: ls -lrt /home/circleci/circleci-demo-java-spring/target/
      - run: ls -lrt /home/circleci/circleci-demo-java-spring/target/jib-cache/
      - run: uname -a
      - run: |
          docker run -d --name demohelloworld2 demohelloworld2:0.0.1-SNAPSHOT
          docker ps
          uname -a
      #- run: docker run -it demohelloworld2:0.0.1-SNAPSHOT bash #never give hand back
      #- run: | docker exec -it demohelloworld2 bash
      #- run: docker run demohelloworld2:0.0.1-SNAPSHOT /bin/bash -c "netstat -ntlp ; exit"
      - run: docker exec demohelloworld2 /bin/bash -c "netstat -ntlp ; exit"
